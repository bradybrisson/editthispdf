name: Release Build and Deploy

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/editthispdf

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}
            ${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.title=editthispdf

      - name: Ensure package is public
        run: |
          echo "GHCR images are public when the package visibility is public. If needed, set visibility in repository package settings."

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Install gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'
          export_default_credentials: true

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials "${{ secrets.GKE_CLUSTER_NAME }}" --zone us-east1-b --project "${{ secrets.GCP_PROJECT_ID }}"

      - name: Prepare Kubernetes manifest from template
        run: |
          mkdir -p kubectl
          sed "s|{{IMAGE}}|${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}|g" kubectl/deployment.yaml.tmpl > kubectl/deployment.yaml

      - name: Apply manifest
        run: kubectl apply -f kubectl/deployment.yaml

      - name: Wait for rollout
        run: |
          set -e
          kubectl rollout status deployment/editthispdf --namespace default --timeout=60s


